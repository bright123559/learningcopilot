.PHONY: run build clean test install dev

# Run the application
run:
	@echo "üöÄ Starting PayFlow Backend API..."
	@go run .

# Build the application
build:
	@echo "üî® Building application..."
	@go build -o bin/payflow-api .
	@echo "‚úÖ Build complete! Binary: bin/payflow-api"

# Clean build artifacts
clean:
	@echo "üßπ Cleaning..."
	@rm -rf bin/
	@rm -rf tmp/
	@echo "‚úÖ Clean complete!"

# Run tests
test:
	@echo "üß™ Running tests..."
	@go test -v ./...

# Install dependencies
install:
	@echo "üì¶ Installing dependencies..."
	@go mod download
	@go mod tidy
	@echo "‚úÖ Dependencies installed!"

# Development mode with hot reload (requires Air)
dev:
	@echo "üî• Starting development mode with hot reload..."
	@if command -v air > /dev/null; then \
		air; \
	else \
		echo "‚ùå Air is not installed. Install it with: go install github.com/cosmtrek/air@latest"; \
		echo "Or run: make install-air"; \
	fi

# Install Air for hot reload
install-air:
	@echo "üì¶ Installing Air..."
	@go install github.com/cosmtrek/air@latest
	@echo "‚úÖ Air installed!"

# Format code
fmt:
	@echo "üé® Formatting code..."
	@go fmt ./...
	@echo "‚úÖ Code formatted!"

# Lint code
lint:
	@echo "üîç Linting code..."
	@if command -v golangci-lint > /dev/null; then \
		golangci-lint run; \
	else \
		echo "‚ùå golangci-lint is not installed. Install it from: https://golangci-lint.run/usage/install/"; \
	fi

# Show help
help:
	@echo "Available commands:"
	@echo "  make run          - Run the application"
	@echo "  make build        - Build the application"
	@echo "  make clean        - Clean build artifacts"
	@echo "  make test         - Run tests"
	@echo "  make install      - Install dependencies"
	@echo "  make dev          - Run with hot reload (requires Air)"
	@echo "  make install-air  - Install Air for hot reload"
	@echo "  make fmt          - Format code"
	@echo "  make lint         - Lint code"
	@echo "  make help         - Show this help message"
